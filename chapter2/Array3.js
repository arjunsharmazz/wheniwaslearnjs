// üìö JavaScript ‡§Æ‡•á‡§Ç Array ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?
// Array ‡§è‡§ï ‡§ê‡§∏‡§æ ‡§°‡•á‡§ü‡§æ ‡§∏‡•ç‡§ü‡•ç‡§∞‡§ï‡•ç‡§ö‡§∞ ‡§π‡•à ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§µ‡•á‡§∞‡§ø‡§è‡§¨‡§≤ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

// ‡§ú‡•à‡§∏‡•á ‡§è‡§ï ‡§¨‡§ï‡•ç‡§∏‡•á ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§ï‡§ø‡§§‡§æ‡§¨‡•á‡§Ç ‚Äî ‡§µ‡•à‡§∏‡•á ‡§π‡•Ä ‡§è‡§ï Array ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç‡§ú ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç‡•§

// ‚úÖ Array ‡§ï‡•à‡§∏‡•á ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç?

let fruits = ["‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ", "‡§Ü‡§Æ"];
let numbers = [10, 20, 30, 40];
let mixed = [1, "hello", true];
// üî¢ Array ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§è‡§≤‡§ø‡§Æ‡•á‡§Ç‡§ü‡•ç‡§∏ ‡§ï‡•ã ‡§ï‡•à‡§∏‡•á ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡§∞‡•á‡§Ç?
// Array ‡§ï‡§æ ‡§π‡§∞ ‡§Ü‡§á‡§ü‡§Æ index number ‡§∏‡•á ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã 0 ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§



console.log(fruits[0]);  // "‡§∏‡•á‡§¨"
console.log(fruits[1]);  // "‡§ï‡•á‡§≤‡§æ"
// üîß ‡§ï‡•Å‡§õ ‡§ï‡§æ‡§Æ ‡§ï‡•á Array Methods (‡§Æ‡§ø‡§•‡§°‡•ç‡§∏)
// Method	‡§ï‡§æ‡§Æ (‡§ï‡§æ‡§∞‡•ç‡§Ø)	‡§â‡§¶‡§æ‡§π‡§∞‡§£
// push()	‡§Ö‡§Ç‡§§ ‡§Æ‡•á‡§Ç ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ú‡•ã‡§°‡§º‡§®‡§æ	fruits.push("‡§Ö‡§Ç‡§ó‡•Ç‡§∞")
// pop()	‡§Ü‡§ñ‡§ø‡§∞‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§π‡§ü‡§æ‡§®‡§æ	fruits.pop()
// shift()	‡§™‡§π‡§≤‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§π‡§ü‡§æ‡§®‡§æ	fruits.shift()
// unshift()	‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§Æ‡•á‡§Ç ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ú‡•ã‡§°‡§º‡§®‡§æ	fruits.unshift("‡§™‡§™‡•Ä‡§§‡§æ")
// length	‡§ï‡•Å‡§≤ ‡§Ü‡§á‡§ü‡§Æ‡•ç‡§∏ ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ	fruits.length
// indexOf()	‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ï‡§æ ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏ ‡§™‡§§‡§æ ‡§ï‡§∞‡§®‡§æ	fruits.indexOf("‡§Ü‡§Æ")
// includes()	‡§ö‡•á‡§ï ‡§ï‡§∞‡§®‡§æ ‡§ï‡§ø ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç	fruits.includes("‡§ï‡•á‡§≤‡§æ")
// join()	‡§∏‡§≠‡•Ä ‡§Ü‡§á‡§ü‡§Æ ‡§ï‡•ã ‡§è‡§ï string ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§®‡§æ	fruits.join(", ")

// üîÅ Array ‡§Æ‡•á‡§Ç Loop ‡§ï‡•à‡§∏‡•á ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç?



for(let i = 0; i < fruits.length; i++) {
  console.log(fruits[i]);
}



fruits.forEach(function(fruit) {
  console.log(fruit);
});


// üß† ‡§Ø‡§æ‡§¶ ‡§∞‡§ñ‡§®‡•á ‡§≤‡§æ‡§Ø‡§ï ‡§¨‡§æ‡§§‡•á‡§Ç:
// JavaScript ‡§Æ‡•á‡§Ç array dynamic ‡§π‡•ã‡§§‡§æ ‡§π‡•à (‡§Ü‡§™ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ú‡•ã‡§°‡§º/‡§π‡§ü‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç)

// ‡§è‡§ï array ‡§Æ‡•á‡§Ç ‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó types ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§≠‡•Ä ‡§∞‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç

// index ‡§π‡§Æ‡•á‡§∂‡§æ 0 ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à

// ‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ö‡§æ‡§π‡•á‡§Ç ‡§§‡•ã ‡§Æ‡•à‡§Ç multidimensional array, array methods ‡§™‡§∞ quiz ‡§Ø‡§æ ‡§™‡•ç‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§∏ questions ‡§≠‡•Ä ‡§¶‡•á ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§¨‡•ã‡§≤‡§ø‡§è! üòä