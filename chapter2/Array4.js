// ‚úÖ JavaScript Array ‡§ï‡•á 15 ‡§â‡§™‡§Ø‡•ã‡§ó‡•Ä Methods (‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§∏‡§π‡§ø‡§§)
// 1. push()
// ‚û°Ô∏è Array ‡§ï‡•á ‡§Ö‡§Ç‡§§ ‡§Æ‡•á‡§Ç ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à‡•§


let fruits = ["‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ"];
fruits.push("‡§Ü‡§Æ");  // ["‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ", "‡§Ü‡§Æ"]
// 2. pop()
// ‚û°Ô∏è Array ‡§ï‡•á ‡§Ö‡§Ç‡§§ ‡§ï‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§π‡§ü‡§æ‡§§‡§æ ‡§π‡•à‡•§

fruits.pop();  // ["‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ"]
// 3. unshift()
// ‚û°Ô∏è Array ‡§ï‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§Æ‡•á‡§Ç ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à‡•§


fruits.unshift("‡§Ö‡§Ç‡§ó‡•Ç‡§∞");  // ["‡§Ö‡§Ç‡§ó‡•Ç‡§∞", "‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ"]
// 4. shift()
// ‚û°Ô∏è Array ‡§ï‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§π‡§ü‡§æ‡§§‡§æ ‡§π‡•à‡•§

fruits.shift();  // ["‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ"]
// 5. length
// ‚û°Ô∏è Array ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§§‡§®‡•á ‡§Ü‡§á‡§ü‡§Æ ‡§π‡•à‡§Ç ‡§Ø‡•á ‡§¨‡§§‡§æ‡§§‡§æ ‡§π‡•à‡•§


console.log(fruits.length);  // 2
// 6. includes()
// ‚û°Ô∏è ‡§ö‡•á‡§ï ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§ï‡•ã‡§à ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç Array ‡§Æ‡•á‡§Ç ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç‡•§


fruits.includes("‡§∏‡•á‡§¨");  // true
// 7. indexOf()
// ‚û°Ô∏è ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ï‡§æ ‡§™‡§π‡§≤‡§æ index ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§

js
Copy
Edit
fruits.indexOf("‡§ï‡•á‡§≤‡§æ");  // 1
// 8. join()
// ‚û°Ô∏è Array ‡§ï‡•ã string ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡§§‡§æ ‡§π‡•à (‡§ï‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•á‡§™‡§∞‡•á‡§ü‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§•)‡•§

fruits.join(", ");  // "‡§∏‡•á‡§¨, ‡§ï‡•á‡§≤‡§æ"
// 9. reverse()
// ‚û°Ô∏è Array ‡§ï‡•ã ‡§â‡§≤‡•ç‡§ü‡§æ ‡§ï‡§∞ ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§

fruits.reverse();  // ["‡§ï‡•á‡§≤‡§æ", "‡§∏‡•á‡§¨"]
// 10. sort()
// ‚û°Ô∏è Array ‡§ï‡•ã alphabetical ‡§Ø‡§æ numerical order ‡§Æ‡•á‡§Ç sort ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§


let nums = [10, 2, 30];
nums.sort();  // [10, 2, 30] ‚ùå (string ‡§ï‡•á ‡§π‡§ø‡§∏‡§æ‡§¨ ‡§∏‡•á)
nums.sort((a, b) => a - b);  // [2, 10, 30] ‚úÖ
// 11. concat()
// ‚û°Ô∏è ‡§¶‡•ã ‡§Ø‡§æ ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ arrays ‡§ï‡•ã ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à‡•§

let arr1 = [1, 2];
let arr2 = [3, 4];
let result = arr1.concat(arr2);  // [1, 2, 3, 4]
// 12. slice(start, end)
// ‚û°Ô∏è Array ‡§ï‡§æ ‡§ü‡•Å‡§ï‡§°‡§º‡§æ (copy) ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à‡•§


let nums1 = [10, 20, 30, 40];
let part = nums1.slice(1, 3);  // [20, 30]
// 13. splice(start, deleteCount, ...items)
// ‚û°Ô∏è Array ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§Ø‡§æ ‡§è‡§°‡§ø‡§ü ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

let nums2 = [1, 2, 3];
nums2.splice(1, 1, 5);  // [1, 5, 3]
// 14. map()
// ‚û°Ô∏è ‡§π‡§∞ ‡§Ü‡§á‡§ü‡§Æ ‡§™‡§∞ function ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§ï‡•á ‡§®‡§Ø‡§æ array ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à‡•§


let numbers = [1, 2, 3];
let doubled = numbers.map(x => x * 2);  // [2, 4, 6]
// 15. filter()
// ‚û°Ô∏è ‡§ï‡•á‡§µ‡§≤ ‡§µ‡•ã ‡§Ü‡§á‡§ü‡§Æ ‡§∞‡§ñ‡§§‡§æ ‡§π‡•à ‡§ú‡•ã condition ‡§ï‡•ã pass ‡§ï‡§∞‡•á‡§Ç‡•§


let numbers1 = [1, 2, 3, 4];
let even = numbers1.filter(x => x % 2 === 0);  // [2, 4]
// ‡§¨‡•ã‡§®‡§∏: üéÅ
// forEach() ‚Äî ‡§π‡§∞ ‡§Ü‡§á‡§ü‡§Æ ‡§™‡§∞ loop ‡§≤‡§ó‡§æ‡§§‡§æ ‡§π‡•à‡•§

// find() ‚Äî ‡§™‡§π‡§≤‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ú‡•ã condition ‡§ï‡•ã match ‡§ï‡§∞‡•á‡•§

// reduce() ‚Äî ‡§∏‡§≠‡•Ä ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§ï‡•ã ‡§ú‡•ã‡§°‡§º‡§ï‡§∞ ‡§è‡§ï ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à‡•§

// üîö ‡§®‡§ø‡§∑‡•ç‡§ï‡§∞‡•ç‡§∑ (Summary)
// Method	‡§ï‡§æ‡§Æ (‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à)
// push/pop	‡§Ö‡§Ç‡§§ ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§®‡§æ / ‡§π‡§ü‡§æ‡§®‡§æ
// shift/unshift	‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§®‡§æ / ‡§π‡§ü‡§æ‡§®‡§æ
// indexOf/includes	‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç ‡§¢‡•Ç‡§Å‡§¢‡§®‡§æ
// slice/splice	‡§≠‡§æ‡§ó ‡§®‡§ø‡§ï‡§æ‡§≤‡§®‡§æ / ‡§¨‡§¶‡§≤‡§®‡§æ
// map/filter	‡§®‡§Ø‡§æ array ‡§¨‡§®‡§æ‡§®‡§æ
// sort/reverse	‡§ï‡•ç‡§∞‡§Æ ‡§¨‡§¶‡§≤‡§®‡§æ
// join/concat	‡§ú‡•ã‡§°‡§º‡§®‡§æ ‡§Ø‡§æ string ‡§¨‡§®‡§æ‡§®‡§æ







//agar array k andar or andar array ho to kese use kare
const arrayyy =[1,2,3,[2,4,5],[12,324,[12,425,345,[234,345,435]]]]
console.log(arrayyy)
const anotherarrayyy =arrayyy.flat(Infinity)
console.log(anotherarrayyy)


//agar kisi value ko array bananna ho
console.log(Array.isArray("arjun"))
console.log(Array.from("arjun"))

//agar bhut sare variables ko array banna ho to
let a=90
let b=90
let c=90
console.log(Array.of(a,b,c));
